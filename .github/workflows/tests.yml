# Workflow to run application tests and linters
name: Python Application Tests

# Triggers the workflow on push or pull request events for the main branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checks out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Sets up a Python environment for use in actions
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      # Step 3: Installs and runs the flake8 linter to check for style issues
      - name: Install and run linter (flake8)
        run: |
          pip install flake8
          # Stop the build if there are Python syntax errors or undefined names
          flake8 argus_scope/ --count --select=E9,F63,F7,F82 --show-source --statistics
          # Exit-zero treats all errors as warnings. The max-line-length is set for readability
          flake8 argus_scope/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      # Step 4: Runs the test suite using Docker Compose
      # This command builds the necessary images and runs `pytest` inside the 'argusscope' container.
      # It also automatically starts dependent services like mongodb and elasticsearch.
      - name: Run tests with Docker Compose
        run: docker compose run --rm pytest